# A bit of a retread of 'tuples_intro_3.py' with a few extra steps.

# Define the data to be used, a list of tuples and nested lists of tuples.
albums = [
    ("Welcome to my Nightmare", "Alice Cooper", 1975,
     [
         (1, "Welcome to my Nightmare"),
         (2, "Devil's Food"),
         (3, "The Black Widow"),
         (4, "Some Folks"),
         (5, "Only Women Bleed"),
     ]
     ),
    ("Bad Company", "Bad Company", 1974,
     [
         (1, "Can't Get Enough"),
         (2, "Rock Steady"),
         (3, "Ready for Love"),
         (4, "Don't Let Me Down"),
         (5, "Bad Company"),
         (6, "The Way I Choose"),
         (7, "Movin' On"),
         (8, "Seagull"),
     ]
     ),
    ("Nightflight", "Budgie", 1981,
     [
         (1, "I Turned to Stone"),
         (2, "Keeping a Rendezvous"),
         (3, "Reaper of the Glory"),
         (4, "She Used Me Up"),
     ]
     ),
    ("More Mayhem", "Imelda May", 2011,
     [
         (1, "Pulling the Rug"),
         (2, "Psycho"),
         (3, "Mayhem"),
         (4, "Kentish Town Waltz"),
     ]
     ),
]

# Iterating through the albums list to print all data, the fourth item is /
# printed as a list of tuples as that is what it is.
for name, artist, year, songs in albums:
    print("Album: {}, Artist: {}, Year: {}, Songs: {}"
          .format(name, artist, year, songs))
print()

print("\n-------------------------------------------------------------------\n")

album = albums[2][3]
for track_no, track_name in album:
    print(track_no, ". ", track_name, sep="")

print("\n-------------------------------------------------------------------\n")

# A way to print all data in a user-friendly format.
print()
for album in albums:
    album_name, album_artist, album_year, album_songs = album
    print("Album: {} \nArtist: {} \nYear: {}"
          .format(album_name, album_artist, album_year))
    print("Songs included:")
    for track_no, track_name in album_songs:
        print(track_no, ". ", track_name, sep="")
    print()

print("\n-------------------------------------------------------------------\n")

# This is an example of nested indexing, we first index into albums, and then /
# we index into the item generated, then we index into the item generated by /
# that and so on until we get to what we want.
song_number, song_title = albums[3][3][2]
print(song_number, ". ", song_title, sep="")
